name: CI/CD Pipeline

on:
    push:
        branches:
            - beta
            - main
            - fix/pipeline

jobs:
    Build:
        runs-on: self-hosted
        steps:
            - name: Inject slug/short variables
              uses: rlespinasse/github-slug-action@v4
            - name: Checkout
              uses: actions/checkout@v4
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                  install: true
            - name: Cache Docker layers
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-
            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKER_USERNAME }}/heurly:${{ env.GITHUB_REF_NAME_SLUG_URL }}
                  platforms: linux/amd64
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache,mode=ma
                  build-args: TIPTAP_TOKEN=${{secrets.TIPTAP_TOKEN}}

    Deploy:
        needs: Build
        runs-on: self-hosted
        steps:
            - name: Inject slug/short variables
              uses: rlespinasse/github-slug-action@v4.x

            - name: Deploy to Staging
              if: ${{ github.ref != 'refs/heads/main' }}
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USERNAME }}
                  password: ${{ secrets.VPS_PASSWORD }}
                  script: |
                      cd /home/heurly/Heurly-OPS
                      echo ${{secrets.DOCKER_TOKEN}} | docker login --username ${{secrets.DOCKER_USERNAME}} --password-stdin 2> /dev/null
                      ./scripts/add-container.sh ${{ env.GITHUB_REF_NAME_SLUG_URL }}

            - name: Deploy to Production
              if: ${{ github.ref == 'refs/heads/main' }}
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USERNAME }}
                  password: ${{ secrets.VPS_PASSWORD }}
                  script: |
                      echo ${{secrets.DOCKER_TOKEN}} | docker login --username ${{secrets.DOCKER_USERNAME}} --password-stdin 2> /dev/null
                      docker service update --image domesday/heurly:main prod_pheurly

    Discord:
        needs: Deploy
        runs-on: self-hosted
        steps:
            - name: Get deployment info
              id: info
              run: |
                  if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
                    NAME=Production
                    LINK="https://heurly.fr"
                    BRANCH=main
                  else
                    NAME=Staging
                    LINK="https://${{ env.GITHUB_REF_SLUG }}.heurly.fr"
                    BRANCH=${{ env.GITHUB_REF_SLUG }}
                  fi
                  echo "::set-output name=name::$NAME"
                  echo "::set-output name=link::$LINK"
                  echo "::set-output branch=branch::$BRANCH"

            - name: Discord notification
              env:
                  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
                  DISCORD_EMBEDS: '[{"title": "Deployment - Link of ${{ steps.info.outputs.name }}", "description": "[${{ github.repository }}] Branch ${{ steps.info.outputs.branch }} has been deployed.", "url": "${{ steps.info.outputs.link }}", "color": 14847590}]'
              uses: Ilshidur/action-discord@master
              with:
                  args:
                      ""
                      # Ã©tape pour ajouter le reverse proxy
